plugins {
	id "java"
	id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "86b2392"
    id "org.spongepowered.mixin" version "451e8b3"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
}

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
	makeObfSourceJar = false
    clientJvmArgs += "-Dfml.coreMods.load=me.exejar.duelsniffer.tweaker.DuelSnifferTweaker"
    clientRunArgs += "--mixin mixins.duelsniffer.json"
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

dependencies {
    // How to normally add a dependency (If you don't want it to be added to the jar)
    // implementation "com.example:example:1.0.0"
    // If you would like to include it (have the library inside your jar) instead use
    // include "com.example:example:1.0.0"
	
    include("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
        exclude module: "log4j-core"
    }

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
}

//dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'

//    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
//    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
//}

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"
    exclude "pack.mcmeta"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"
}

processResources {
    inputs.property "version", modVersion
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": modVersion, "mcversion": project.minecraft.version, "modid": modBaseName, "name": modName, "description": modDescription, "url": modURL, "updateUrl": updateUrl
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

// move resources so they can be accessed at runtime
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
            todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

jar {
    manifest.attributes(
            "FMLCorePlugin": "me.exejar.duelsniffer.tweaker.DuelSnifferTweaker",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.duelsniffer.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.duelsniffer.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.duelsniffer.refmap.json"
    }
}

tasks.reobfJar.dependsOn(shadowJar)